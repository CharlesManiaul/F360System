@{
    ViewData["Title"] = "Interview Form";
  
}
@{
    string currentCategory = "";
}
@{
    int categoryIndex = 0;

}
@model EvalResult




<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Exit Interview</title>

    <!-- Tabler CSS -->
    <link rel="stylesheet" href="~/css/tabler.min.css" />
    <link rel="stylesheet" href="~/css/tabler-vendors.min.css" />
    <link rel="stylesheet" href="~/lib/dropzone/dist/dropzone.css?1684106062" />
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />

    <!-- Custom Styles -->
    <style>
        .page-header {
        padding: 20px;
        background-color: #f8f9fa;
        }

        .table-responsive {
        overflow-x: auto;
        }

        .question-row {
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        margin-bottom: 10px;
        }

        .selectgroup {
        display: flex;
        gap: 15px;
        }

        .selectgroup-item {
        display: inline-block;
        padding: 5px 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
        }

        .sticky-header {
            position: sticky;
            top: 0;
            z-index: 1030; /* high enough to stay above other content */
           
        }

     
    </style>
</head>



<body>
    <!-- Page Header -->
    <div class="page-header d-print-none sticky-header">
        <div class="container-xxl">
            <div class="row g-2 align-items-center">
                <div class="col-md-8">
                    <!-- Title Section -->
                    <h2 class="page-title m-0">
                        F360 Evaluation Form
                    </h2>

                    <!-- Badge Section (English and Filipino) -->
                    <div class="d-flex flex-column flex-md-row align-items-start gap-2 mt-2 mt-md-0">
                        <div class="fw-bold d-flex flex-wrap align-items-center gap-2">
                            <span class="badge bg-red text-white fs-6 px-2 py-1">1 - Strongly Disagree</span>
                            <span class="badge bg-pink text-dark fs-6 px-2 py-1">2 - Disagree</span>
                            <span class="badge bg-success-lt text-dark fs-6 px-2 py-1">3 - Agree</span>
                            <span class="badge bg-success text-white fs-6 px-2 py-1">4 - Strongly Agree</span>
                        </div>
                        <div class="fw-bold d-flex flex-wrap align-items-center gap-2 mt-1">
                            <span class="badge bg-red text-white fs-6 px-2 py-1">1 - Lubos na hindi sumasang-ayon</span>
                            <span class="badge bg-pink text-dark fs-6 px-2 py-1">2 - Hindi sumasang-ayon</span>
                            <span class="badge bg-success-lt text-dark fs-6 px-2 py-1">3 - Sumasang-ayon</span>
                            <span class="badge bg-success text-white fs-6 px-2 py-1">4 - Lubos na sumasang-ayon</span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Employee Name Card (Solo Column) -->
            <div class="col-12">
                <div class="card mb-2">
                    <div class="card-header d-flex align-items-center">
                        <h3 class="card-title text-uppercase mb-0">@Model.EmpName</h3>
                        <div class="ms-auto">
                            <button type="submit" class="btn btn-primary btnSubmit1">Submit Answers</button>
                        </div>
                    </div>
                </div>
            </div>
           
        </div>
    </div>







    <div class="page-body">
        <div class="container-xxl">
           
            @using (Html.BeginForm("SaveRating", "Ratee", FormMethod.Post, new { id = "form-submit-rate" }))
            {
                @Html.HiddenFor(m => m.EVId)



                @foreach (var group in Model.evalRatings.GroupBy(m => m.Category))
                {
                    <div class="card mb-2">
                        <div class="card-header">
                            <h3 class="card-title">@($"{group.Key}")</h3>
                        </div>

                        <div class="table-responsive table-mobile-sm">
                            <table class="table">
                                <tbody>
                                    @foreach (var item in group)
                                    {
                                        int modelIndex = Model.evalRatings.IndexOf(item);



                                        <tr class="@(Model.evalRatings[modelIndex].Rate == null || Model.evalRatings[modelIndex].Rate == 0 ? "bg-danger-subtle" : "")">
                                            <td>@item.Seq.</td>
                                            <td data-label="Question">
                                                <a class="edit-question text-decoration-none text-dark">
                                                    @Html.Raw(item.Questionaire.Replace("\n", "<br>"))
                                                </a>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center gap-3">
                                                    @for (int ii = 1; ii <= 4; ii++)
                                                    {
                                                        <div class="form-check form-check-inline d-flex align-items-center">
                                                            <input class="form-check-input" type="radio"
                                                                   asp-for="@Model.evalRatings[modelIndex].Rate"
                                                                   value="@ii" />
                                                            <label class="form-check-label ms-2 fw-semibold text-muted">@ii</label>
                                                        </div>
                                                    }
                                                </div>
                                            </td>
                                        </tr>

                                        <!-- Hidden inputs per rating -->
                                        @Html.HiddenFor(m => m.evalRatings[modelIndex].DId)
                                        @Html.HiddenFor(m => m.evalRatings[modelIndex].Category)
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Category Remarks -->
                        <div class="px-3 pb-3">
                            <label class="form-label fw-bold">Remarks for @group.Key</label>
                            @{
                                string remarks = "";
                                foreach (var row in Model.evalRemarks)
                                {
                                    if (row.Category == group.Key)
                                        remarks = row.Remarks;
                                }
                            }
                            <textarea class="form-control" name="CategoryRemarks[@categoryIndex]" rows="3">@remarks</textarea>
                        </div>
                    </div>

                    categoryIndex++;
                  
                }

                <!-- Overall Remarks -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h3 class="card-title">Overall Remarks</h3>
                    </div>
                   
                        <div class="card-body">
                            @Html.TextAreaFor(m => m.OverRemarks, new
                                {
                                    @class = "form-control",
                                    rows = 4,
                                    data_bs_toggle = "autosize",
                                    name = "OverRemarks"
                                })
                            <span id="overRemarksError" class="text-danger d-none">Please provide Overall Remarks since all fields are filled.</span>
                        </div>
                    
                </div>

                
            }

       
        </div>
    </div>

  

</body>
@section Scripts {
    <script>



             $(document).on("click", ".btnSubmit1", function () {
            $("#form-submit-rate").submit();
        });



        // $(document).ready(function () {
        //     $('#form-submit-rate').on('submit', function (e) {
        //         let allRated = true;

        //         // Loop through each rating group and check if every question has a selected rate
        //         $('.table').each(function () {
        //             $(this).find('tbody tr').each(function () {
        //                 if (!$(this).find('input[type="radio"]:checked').length) {
        //                     allRated = false;
        //                     return false;
        //                 }
        //             });
        //             if (!allRated) return false;
        //         });

        //         if (allRated) {
        //             let overRemarks = $('textarea[name="OverRemarks"]').val()?.trim();

        //             if (!overRemarks) {
        //                 e.preventDefault();

        //                 // Show inline error
        //                 $('#overRemarksError').removeClass('d-none');
        //             } else {
        //                 $('#overRemarksError').addClass('d-none');
        //             }
        //         } else {
        //             // If not all are rated, hide the error if it's shown
        //             $('#overRemarksError').addClass('d-none');
        //         }
        //     });
        // });
    </script>
}
